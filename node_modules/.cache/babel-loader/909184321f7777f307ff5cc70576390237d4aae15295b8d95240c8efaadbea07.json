{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Nodejs\\\\car-selector\\\\src\\\\components\\\\Question.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Typography, Paper } from '@mui/material';\nimport QuestionButton from './QuestionButton';\nimport questions from '../questions/questions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = () => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(questions[0]);\n  const currentAnswers = currentQuestion.answers;\n  const navigate = useNavigate();\n  const handleAnswerClick = (nextQuestion, calculatedCar) => {\n    if (nextQuestion) {\n      return setCurrentQuestion(questions[nextQuestion]);\n    }\n    return navigate('/quiz-complete', {\n      state: {\n        carSuccess: calculatedCar\n      }\n    });\n  };\n  return (\n    /*#__PURE__*/\n    // Questions\n    _jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mb: 5,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: currentQuestion.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        width: \"100%\",\n        display: \"inline-flex\",\n        children: currentAnswers === null || currentAnswers === void 0 ? void 0 : currentAnswers.map((test, index) => /*#__PURE__*/_jsxDEV(QuestionButton, {\n          text: currentAnswers[index].response,\n          calculatedCar: currentAnswers[index].calculatedCar,\n          onClick: () => {\n            var _currentAnswers$index, _currentAnswers$index2;\n            return handleAnswerClick((_currentAnswers$index = currentAnswers[index]) === null || _currentAnswers$index === void 0 ? void 0 : _currentAnswers$index.nextQuestion, (_currentAnswers$index2 = currentAnswers[index]) === null || _currentAnswers$index2 === void 0 ? void 0 : _currentAnswers$index2.calculatedCar);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(Question, \"cfAdzymvvq/zfXVnRGz96xfZZs0=\", false, function () {\n  return [useNavigate];\n});\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","useNavigate","Box","Typography","Paper","QuestionButton","questions","jsxDEV","_jsxDEV","Question","_s","currentQuestion","setCurrentQuestion","currentAnswers","answers","navigate","handleAnswerClick","nextQuestion","calculatedCar","state","carSuccess","children","mb","variant","questionText","fileName","_jsxFileName","lineNumber","columnNumber","width","display","map","test","index","text","response","onClick","_currentAnswers$index","_currentAnswers$index2","_c","$RefreshReg$"],"sources":["D:/Code/Nodejs/car-selector/src/components/Question.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Box, Typography, Paper } from '@mui/material'\r\n\r\nimport QuestionButton from './QuestionButton'\r\nimport questions from '../questions/questions'\r\n\r\n\r\nconst Question = () => {\r\n    const [currentQuestion, setCurrentQuestion] = useState(questions[0])\r\n    const currentAnswers = currentQuestion.answers\r\n    const navigate = useNavigate()\r\n\r\n    const handleAnswerClick = (nextQuestion, calculatedCar) => {\r\n        if (nextQuestion) {\r\n            return setCurrentQuestion(questions[nextQuestion])\r\n        }\r\n        return navigate('/quiz-complete', {state: {carSuccess: calculatedCar}})\r\n    }        \r\n\r\n    return (\r\n\r\n// Questions\r\n        <Box>\r\n            <Box mb={5}>\r\n                <Paper>\r\n                    <Typography variant=\"h4\">{currentQuestion.questionText}</Typography>\r\n                </Paper>\r\n            </Box>\r\n\r\n\r\n{/* Answers */}\r\n            <Box \r\n                width='100%'\r\n                display='inline-flex'\r\n            >                \r\n                {currentAnswers?.map((test, index) => (\r\n                    <QuestionButton \r\n                        text={currentAnswers[index].response}\r\n                        calculatedCar={currentAnswers[index].calculatedCar}                                \r\n                        onClick={() => handleAnswerClick(currentAnswers[index]?.nextQuestion, currentAnswers[index]?.calculatedCar)}\r\n                    />\r\n                ))}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Question"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,GAAG,EAAEC,UAAU,EAAEC,KAAK,QAAQ,eAAe;AAEtD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,SAAS,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG9C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAACM,SAAS,CAAC,CAAC,CAAC,CAAC;EACpE,MAAMO,cAAc,GAAGF,eAAe,CAACG,OAAO;EAC9C,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,MAAMe,iBAAiB,GAAGA,CAACC,YAAY,EAAEC,aAAa,KAAK;IACvD,IAAID,YAAY,EAAE;MACd,OAAOL,kBAAkB,CAACN,SAAS,CAACW,YAAY,CAAC,CAAC;IACtD;IACA,OAAOF,QAAQ,CAAC,gBAAgB,EAAE;MAACI,KAAK,EAAE;QAACC,UAAU,EAAEF;MAAa;IAAC,CAAC,CAAC;EAC3E,CAAC;EAED;IAAA;IAEJ;IACQV,OAAA,CAACN,GAAG;MAAAmB,QAAA,gBACAb,OAAA,CAACN,GAAG;QAACoB,EAAE,EAAE,CAAE;QAAAD,QAAA,eACPb,OAAA,CAACJ,KAAK;UAAAiB,QAAA,eACFb,OAAA,CAACL,UAAU;YAACoB,OAAO,EAAC,IAAI;YAAAF,QAAA,EAAEV,eAAe,CAACa;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eAINpB,OAAA,CAACN,GAAG;QACA2B,KAAK,EAAC,MAAM;QACZC,OAAO,EAAC,aAAa;QAAAT,QAAA,EAEpBR,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC7BzB,OAAA,CAACH,cAAc;UACX6B,IAAI,EAAErB,cAAc,CAACoB,KAAK,CAAC,CAACE,QAAS;UACrCjB,aAAa,EAAEL,cAAc,CAACoB,KAAK,CAAC,CAACf,aAAc;UACnDkB,OAAO,EAAEA,CAAA;YAAA,IAAAC,qBAAA,EAAAC,sBAAA;YAAA,OAAMtB,iBAAiB,EAAAqB,qBAAA,GAACxB,cAAc,CAACoB,KAAK,CAAC,cAAAI,qBAAA,uBAArBA,qBAAA,CAAuBpB,YAAY,GAAAqB,sBAAA,GAAEzB,cAAc,CAACoB,KAAK,CAAC,cAAAK,sBAAA,uBAArBA,sBAAA,CAAuBpB,aAAa,CAAC;UAAA;QAAC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/G,CACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;AAEd,CAAC;AAAAlB,EAAA,CAtCKD,QAAQ;EAAA,QAGOR,WAAW;AAAA;AAAAsC,EAAA,GAH1B9B,QAAQ;AAwCd,eAAeA,QAAQ;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
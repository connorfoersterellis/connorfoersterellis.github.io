{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Nodejs\\\\car-selector\\\\src\\\\components\\\\QuestionButton.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Box, Button, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst regularButton = text => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\nconst LastQuestionButton = ({\n  calculatedCar,\n  text\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const toQuizComplete = calculatedCar => {\n    navigate('/quiz-complete', {\n      state: {\n        calculatedCar: calculatedCar\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    onClick: () => {\n      toQuizComplete();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"regularButton\", {\n      text: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(LastQuestionButton, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LastQuestionButton;\nconst QuestionButton = ({\n  text,\n  onClick,\n  calculatedCar\n}) => {\n  if (calculatedCar) {\n    // if this question is the last one, turn the button into a link that sends \n    return LastQuestionButton(calculatedCar, text);\n  }\n  return regularButton;\n};\n_c2 = QuestionButton;\nexport default QuestionButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"LastQuestionButton\");\n$RefreshReg$(_c2, \"QuestionButton\");","map":{"version":3,"names":["React","Link","useNavigate","Box","Button","Typography","jsxDEV","_jsxDEV","regularButton","text","width","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","LastQuestionButton","calculatedCar","_s","navigate","toQuizComplete","state","onClick","_c","QuestionButton","_c2","$RefreshReg$"],"sources":["D:/Code/Nodejs/car-selector/src/components/QuestionButton.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Box, Button, Typography } from '@mui/material'\r\n\r\n\r\n\r\nconst regularButton = (text) => {\r\n    return (\r\n        <Box \r\n            width='100%'\r\n        >\r\n            <Button \r\n                variant=\"contained\"\r\n            >\r\n                <Typography variant=\"h6\">\r\n                    {text}\r\n                </Typography>\r\n            </Button>\r\n        </Box>\r\n    )  \r\n}\r\n       \r\n\r\nconst  LastQuestionButton = ({calculatedCar, text}) => {\r\n    const navigate = useNavigate()\r\n    const toQuizComplete = calculatedCar => {\r\n        navigate('/quiz-complete', {state: {calculatedCar: calculatedCar}})\r\n    }\r\n    return (\r\n        <Box onClick={()=>{toQuizComplete()}}>\r\n            <regularButton text={text}/>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nconst QuestionButton = ({text, onClick, calculatedCar}) => {\r\n    \r\n\r\n    if (calculatedCar) { // if this question is the last one, turn the button into a link that sends \r\n        return (\r\n            LastQuestionButton(calculatedCar, text)\r\n        )\r\n    }\r\n    return regularButton\r\n           \r\n}\r\n\r\nexport default QuestionButton"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,GAAG,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIvD,MAAMC,aAAa,GAAIC,IAAI,IAAK;EAC5B,oBACIF,OAAA,CAACJ,GAAG;IACAO,KAAK,EAAC,MAAM;IAAAC,QAAA,eAEZJ,OAAA,CAACH,MAAM;MACHQ,OAAO,EAAC,WAAW;MAAAD,QAAA,eAEnBJ,OAAA,CAACF,UAAU;QAACO,OAAO,EAAC,IAAI;QAAAD,QAAA,EACnBF;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAGD,MAAOC,kBAAkB,GAAGA,CAAC;EAACC,aAAa;EAAET;AAAI,CAAC,KAAK;EAAAU,EAAA;EACnD,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAC9B,MAAMmB,cAAc,GAAGH,aAAa,IAAI;IACpCE,QAAQ,CAAC,gBAAgB,EAAE;MAACE,KAAK,EAAE;QAACJ,aAAa,EAAEA;MAAa;IAAC,CAAC,CAAC;EACvE,CAAC;EACD,oBACIX,OAAA,CAACJ,GAAG;IAACoB,OAAO,EAAEA,CAAA,KAAI;MAACF,cAAc,CAAC,CAAC;IAAA,CAAE;IAAAV,QAAA,eACjCJ,OAAA;MAAeE,IAAI,EAAEA;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEd,CAAC;AAAAG,EAAA,CAVMF,kBAAkB;EAAA,QACJf,WAAW;AAAA;AAAAsB,EAAA,GADzBP,kBAAkB;AAazB,MAAMQ,cAAc,GAAGA,CAAC;EAAChB,IAAI;EAAEc,OAAO;EAAEL;AAAa,CAAC,KAAK;EAGvD,IAAIA,aAAa,EAAE;IAAE;IACjB,OACID,kBAAkB,CAACC,aAAa,EAAET,IAAI,CAAC;EAE/C;EACA,OAAOD,aAAa;AAExB,CAAC;AAAAkB,GAAA,GAVKD,cAAc;AAYpB,eAAeA,cAAc;AAAA,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Nodejs\\\\car-selector\\\\src\\\\components\\\\QuestionButton.jsx\";\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Button, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegularButton = text => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = RegularButton;\nconst QuestionButton = ({\n  text,\n  calculatedCar\n}) => {\n  var _s = $RefreshSig$();\n  const LastQuestionButton = ({\n    calculatedCar,\n    text\n  }) => {\n    _s();\n    const navigate = useNavigate();\n    const toQuizComplete = calculatedCar => {\n      navigate('/quiz-complete', {\n        state: {\n          calculatedCar: calculatedCar\n        }\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(Box, {\n      onClick: () => {\n        toQuizComplete();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"regularButton\", {\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  };\n  _s(LastQuestionButton, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n  if (calculatedCar) {\n    // if this question is the last one, turn the button into a link that sends \n    return /*#__PURE__*/_jsxDEV(LastQuestionButton, {\n      calculatedCar: calculatedCar,\n      text: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(RegularButton, {\n    text: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 12\n  }, this);\n};\n_c2 = QuestionButton;\nexport default QuestionButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"RegularButton\");\n$RefreshReg$(_c2, \"QuestionButton\");","map":{"version":3,"names":["React","useNavigate","Box","Button","Typography","jsxDEV","_jsxDEV","RegularButton","text","width","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","QuestionButton","calculatedCar","_s","$RefreshSig$","LastQuestionButton","navigate","toQuizComplete","state","onClick","_c2","$RefreshReg$"],"sources":["D:/Code/Nodejs/car-selector/src/components/QuestionButton.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Box, Button, Typography } from '@mui/material'\r\n\r\n\r\n\r\nconst RegularButton = (text) => {\r\n    return (\r\n        <Box \r\n            width='100%'\r\n        >\r\n            <Button \r\n                variant=\"contained\"\r\n            >\r\n                <Typography variant=\"h6\">\r\n                    {text}\r\n                </Typography>\r\n            </Button>\r\n        </Box>\r\n    )  \r\n}\r\n       \r\n\r\n\r\n\r\n\r\nconst QuestionButton = ({text, calculatedCar}) => {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst  LastQuestionButton = ({calculatedCar, text}) => {\r\n    const navigate = useNavigate()\r\n    const toQuizComplete = (calculatedCar) => {\r\n        navigate('/quiz-complete', {state: {calculatedCar: calculatedCar}})\r\n    }\r\n    return (\r\n        <Box onClick={()=>{toQuizComplete()}}>\r\n            <regularButton text={text}/>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n    if (calculatedCar) { // if this question is the last one, turn the button into a link that sends \r\n        return (\r\n            <LastQuestionButton \r\n                calculatedCar={calculatedCar}\r\n                text={text}\r\n            />\r\n        )\r\n    }\r\n    return <RegularButton text={text}/>\r\n           \r\n}\r\n\r\nexport default QuestionButton"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,GAAG,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIvD,MAAMC,aAAa,GAAIC,IAAI,IAAK;EAC5B,oBACIF,OAAA,CAACJ,GAAG;IACAO,KAAK,EAAC,MAAM;IAAAC,QAAA,eAEZJ,OAAA,CAACH,MAAM;MACHQ,OAAO,EAAC,WAAW;MAAAD,QAAA,eAEnBJ,OAAA,CAACF,UAAU;QAACO,OAAO,EAAC,IAAI;QAAAD,QAAA,EACnBF;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAAC,EAAA,GAdKT,aAAa;AAoBnB,MAAMU,cAAc,GAAGA,CAAC;EAACT,IAAI;EAAEU;AAAa,CAAC,KAAK;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAQlD,MAAOC,kBAAkB,GAAGA,CAAC;IAACH,aAAa;IAAEV;EAAI,CAAC,KAAK;IAAAW,EAAA;IACnD,MAAMG,QAAQ,GAAGrB,WAAW,CAAC,CAAC;IAC9B,MAAMsB,cAAc,GAAIL,aAAa,IAAK;MACtCI,QAAQ,CAAC,gBAAgB,EAAE;QAACE,KAAK,EAAE;UAACN,aAAa,EAAEA;QAAa;MAAC,CAAC,CAAC;IACvE,CAAC;IACD,oBACIZ,OAAA,CAACJ,GAAG;MAACuB,OAAO,EAAEA,CAAA,KAAI;QAACF,cAAc,CAAC,CAAC;MAAA,CAAE;MAAAb,QAAA,eACjCJ,OAAA;QAAeE,IAAI,EAAEA;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAEd,CAAC;EAAAI,EAAA,CAVME,kBAAkB;IAAA,QACJpB,WAAW;EAAA;EAe5B,IAAIiB,aAAa,EAAE;IAAE;IACjB,oBACIZ,OAAA,CAACe,kBAAkB;MACfH,aAAa,EAAEA,aAAc;MAC7BV,IAAI,EAAEA;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAEV;EACA,oBAAOT,OAAA,CAACC,aAAa;IAACC,IAAI,EAAEA;EAAK;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEvC,CAAC;AAAAW,GAAA,GAlCKT,cAAc;AAoCpB,eAAeA,cAAc;AAAA,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
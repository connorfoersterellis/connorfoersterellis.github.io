{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Nodejs\\\\car-selector\\\\src\\\\components\\\\Question.jsx\";\nimport React from 'react';\nimport { Box, Typography, Paper } from '@mui/material';\nimport Grid from '@mui/material/Grid2';\nimport QuestionButton from './QuestionButton';\nimport questions from '../questions/questions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentQuestionIndex = 0;\nvar currentQuestion = questions[currentQuestionIndex];\nconst changeQuestion = ({\n  nextQuestionValue\n}) => {\n  currentQuestion = questions[nextQuestionValue];\n};\nconst Question = () => {\n  return (\n    /*#__PURE__*/\n    // Questions\n    _jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: questions[currentQuestion].questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: questions[currentQuestion].answers.map((answer, index) => /*#__PURE__*/_jsxDEV(QuestionButton, {\n              text: answer[index].response,\n              onClick: changeQuestion(answer.nextQuestion)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  );\n};\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","Box","Typography","Paper","Grid","QuestionButton","questions","jsxDEV","_jsxDEV","currentQuestionIndex","currentQuestion","changeQuestion","nextQuestionValue","Question","children","variant","questionText","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","answers","map","answer","index","text","response","onClick","nextQuestion","_c","$RefreshReg$"],"sources":["D:/Code/Nodejs/car-selector/src/components/Question.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, Typography, Paper } from '@mui/material';\r\nimport Grid from '@mui/material/Grid2';\r\n\r\nimport QuestionButton from './QuestionButton';\r\nimport questions from '../questions/questions'\r\n\r\nvar currentQuestionIndex = 0\r\nvar currentQuestion = questions[currentQuestionIndex]\r\n\r\nconst changeQuestion = ({nextQuestionValue}) => {\r\n    currentQuestion = questions[nextQuestionValue]\r\n}\r\n\r\nconst Question = () => {\r\n    return (\r\n// Questions\r\n        <Box>\r\n            <Box>\r\n                <Paper>\r\n                    <Typography variant=\"h4\">{questions[currentQuestion].questionText}</Typography>\r\n                </Paper>\r\n            </Box>\r\n\r\n\r\n{/* Answers */}\r\n            <Box>\r\n                <Grid container spacing={2}>                    \r\n                    <Grid item xs={6}>\r\n                        {questions[currentQuestion].answers.map((answer, index) => (\r\n                            <QuestionButton \r\n                                text={answer[index].response}\r\n                                onClick={changeQuestion(answer.nextQuestion)}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Question"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,UAAU,EAAEC,KAAK,QAAQ,eAAe;AACtD,OAAOC,IAAI,MAAM,qBAAqB;AAEtC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,SAAS,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,IAAIC,oBAAoB,GAAG,CAAC;AAC5B,IAAIC,eAAe,GAAGJ,SAAS,CAACG,oBAAoB,CAAC;AAErD,MAAME,cAAc,GAAGA,CAAC;EAACC;AAAiB,CAAC,KAAK;EAC5CF,eAAe,GAAGJ,SAAS,CAACM,iBAAiB,CAAC;AAClD,CAAC;AAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB;IAAA;IACJ;IACQL,OAAA,CAACP,GAAG;MAAAa,QAAA,gBACAN,OAAA,CAACP,GAAG;QAAAa,QAAA,eACAN,OAAA,CAACL,KAAK;UAAAW,QAAA,eACFN,OAAA,CAACN,UAAU;YAACa,OAAO,EAAC,IAAI;YAAAD,QAAA,EAAER,SAAS,CAACI,eAAe,CAAC,CAACM;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eAINZ,OAAA,CAACP,GAAG;QAAAa,QAAA,eACAN,OAAA,CAACJ,IAAI;UAACiB,SAAS;UAACC,OAAO,EAAE,CAAE;UAAAR,QAAA,eACvBN,OAAA,CAACJ,IAAI;YAACmB,IAAI;YAACC,EAAE,EAAE,CAAE;YAAAV,QAAA,EACZR,SAAS,CAACI,eAAe,CAAC,CAACe,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAClDpB,OAAA,CAACH,cAAc;cACXwB,IAAI,EAAEF,MAAM,CAACC,KAAK,CAAC,CAACE,QAAS;cAC7BC,OAAO,EAAEpB,cAAc,CAACgB,MAAM,CAACK,YAAY;YAAE;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CACJ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGL;EAAC;AAEd,CAAC;AAAAa,EAAA,GA5BKpB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
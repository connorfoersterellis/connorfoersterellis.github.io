{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Nodejs\\\\car-selector\\\\src\\\\components\\\\QuestionButton.jsx\";\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Button, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegularButton = text => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = RegularButton;\nconst QuestionButton = ({\n  text,\n  calculatedCar\n}) => {\n\n  // const  LastQuestionButton = ({calculatedCar, text}) => {\n  //     const navigate = useNavigate()\n  //     const toQuizComplete = calculatedCar => {\n  //         navigate('/quiz-complete', {state: {calculatedCar: calculatedCar}})\n  //     }\n  //     return (\n  //         <Box onClick={()=>{toQuizComplete()}}>\n  //             <RegularButton text={text}/>\n  //         </Box>\n  //     )\n  // }\n\n  // if (calculatedCar) { // if this question is the last one, turn the button into a link that sends \n  //     return (\n  //         <LastQuestionButton \n  //             calculatedCar={calculatedCar}\n  //             text={text}\n  //         />\n  //     )\n  // }\n  // return <RegularButton text={text}/>\n  // return <Box \n  //             width='100%'\n  //         >\n  //             <Button \n  //                 variant=\"contained\"\n  //             >\n  //                 <Typography variant=\"h6\">\n  //                     {text}\n  //                 </Typography>\n  //             </Button>\n  //         </Box>\n};\n_c2 = QuestionButton;\nexport default QuestionButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"RegularButton\");\n$RefreshReg$(_c2, \"QuestionButton\");","map":{"version":3,"names":["React","useNavigate","Box","Button","Typography","jsxDEV","_jsxDEV","RegularButton","text","width","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","QuestionButton","calculatedCar","_c2","$RefreshReg$"],"sources":["D:/Code/Nodejs/car-selector/src/components/QuestionButton.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Box, Button, Typography } from '@mui/material'\r\n\r\n\r\nconst RegularButton = (text) => {\r\n    return (\r\n        <Box \r\n            width='100%'\r\n        >\r\n            <Button \r\n                variant=\"contained\"\r\n            >\r\n                <Typography variant=\"h6\">\r\n                    {text}\r\n                </Typography>\r\n            </Button>\r\n        </Box>\r\n    )  \r\n}\r\n\r\n\r\nconst QuestionButton = ({text, calculatedCar}) => {\r\n    \r\n\r\n    // const  LastQuestionButton = ({calculatedCar, text}) => {\r\n    //     const navigate = useNavigate()\r\n    //     const toQuizComplete = calculatedCar => {\r\n    //         navigate('/quiz-complete', {state: {calculatedCar: calculatedCar}})\r\n    //     }\r\n    //     return (\r\n    //         <Box onClick={()=>{toQuizComplete()}}>\r\n    //             <RegularButton text={text}/>\r\n    //         </Box>\r\n    //     )\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n    // if (calculatedCar) { // if this question is the last one, turn the button into a link that sends \r\n    //     return (\r\n    //         <LastQuestionButton \r\n    //             calculatedCar={calculatedCar}\r\n    //             text={text}\r\n    //         />\r\n    //     )\r\n    // }\r\n    // return <RegularButton text={text}/>\r\n    // return <Box \r\n    //             width='100%'\r\n    //         >\r\n    //             <Button \r\n    //                 variant=\"contained\"\r\n    //             >\r\n    //                 <Typography variant=\"h6\">\r\n    //                     {text}\r\n    //                 </Typography>\r\n    //             </Button>\r\n    //         </Box>\r\n           \r\n}\r\n\r\nexport default QuestionButton"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,GAAG,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGvD,MAAMC,aAAa,GAAIC,IAAI,IAAK;EAC5B,oBACIF,OAAA,CAACJ,GAAG;IACAO,KAAK,EAAC,MAAM;IAAAC,QAAA,eAEZJ,OAAA,CAACH,MAAM;MACHQ,OAAO,EAAC,WAAW;MAAAD,QAAA,eAEnBJ,OAAA,CAACF,UAAU;QAACO,OAAO,EAAC,IAAI;QAAAD,QAAA,EACnBF;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAAC,EAAA,GAdKT,aAAa;AAiBnB,MAAMU,cAAc,GAAGA,CAAC;EAACT,IAAI;EAAEU;AAAa,CAAC,KAAK;;EAG9C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAMA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA,CAEH;AAAAC,GAAA,GAxCKF,cAAc;AA0CpB,eAAeA,cAAc;AAAA,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Nodejs\\\\car-selector\\\\src\\\\components\\\\QuestionButton.jsx\";\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Button, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionButton = ({\n  text,\n  calculatedCar\n}) => {\n  var _s = $RefreshSig$();\n  const RegularButton = text => {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      width: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  };\n  const LastQuestionButton = ({\n    calculatedCar,\n    text\n  }) => {\n    _s();\n    const navigate = useNavigate();\n    const toQuizComplete = calculatedCar => {\n      navigate('/quiz-complete', {\n        state: {\n          calculatedCar: calculatedCar\n        }\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(Box, {\n      onClick: () => {\n        toQuizComplete();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"regularButton\", {\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  };\n  _s(LastQuestionButton, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n  if (calculatedCar) {\n    // if this question is the last one, turn the button into a link that sends \n    return /*#__PURE__*/_jsxDEV(LastQuestionButton, {\n      calculatedCar: calculatedCar,\n      text: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(RegularButton, {\n    text: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n_c = QuestionButton;\nexport default QuestionButton;\nvar _c;\n$RefreshReg$(_c, \"QuestionButton\");","map":{"version":3,"names":["React","useNavigate","Box","Button","Typography","jsxDEV","_jsxDEV","QuestionButton","text","calculatedCar","_s","$RefreshSig$","RegularButton","width","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","LastQuestionButton","navigate","toQuizComplete","state","onClick","_c","$RefreshReg$"],"sources":["D:/Code/Nodejs/car-selector/src/components/QuestionButton.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Box, Button, Typography } from '@mui/material'\r\n\r\n\r\n\r\n\r\n       \r\n\r\n\r\n\r\n\r\nconst QuestionButton = ({text, calculatedCar}) => {\r\n\r\n    const RegularButton = (text) => {\r\n        return (\r\n            <Box \r\n                width='100%'\r\n            >\r\n                <Button \r\n                    variant=\"contained\"\r\n                >\r\n                    <Typography variant=\"h6\">\r\n                        {text}\r\n                    </Typography>\r\n                </Button>\r\n            </Box>\r\n        )  \r\n    }\r\n\r\n    const  LastQuestionButton = ({calculatedCar, text}) => {\r\n        const navigate = useNavigate()\r\n        const toQuizComplete = calculatedCar => {\r\n            navigate('/quiz-complete', {state: {calculatedCar: calculatedCar}})\r\n        }\r\n        return (\r\n            <Box onClick={()=>{toQuizComplete()}}>\r\n                <regularButton text={text}/>\r\n            </Box>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    if (calculatedCar) { // if this question is the last one, turn the button into a link that sends \r\n        return (\r\n            <LastQuestionButton \r\n                calculatedCar={calculatedCar}\r\n                text={text}\r\n            />\r\n        )\r\n    }\r\n    return <RegularButton text={text}/>\r\n           \r\n}\r\n\r\nexport default QuestionButton"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,GAAG,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAUvD,MAAMC,cAAc,GAAGA,CAAC;EAACC,IAAI;EAAEC;AAAa,CAAC,KAAK;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAE9C,MAAMC,aAAa,GAAIJ,IAAI,IAAK;IAC5B,oBACIF,OAAA,CAACJ,GAAG;MACAW,KAAK,EAAC,MAAM;MAAAC,QAAA,eAEZR,OAAA,CAACH,MAAM;QACHY,OAAO,EAAC,WAAW;QAAAD,QAAA,eAEnBR,OAAA,CAACF,UAAU;UAACW,OAAO,EAAC,IAAI;UAAAD,QAAA,EACnBN;QAAI;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAEd,CAAC;EAED,MAAOC,kBAAkB,GAAGA,CAAC;IAACX,aAAa;IAAED;EAAI,CAAC,KAAK;IAAAE,EAAA;IACnD,MAAMW,QAAQ,GAAGpB,WAAW,CAAC,CAAC;IAC9B,MAAMqB,cAAc,GAAGb,aAAa,IAAI;MACpCY,QAAQ,CAAC,gBAAgB,EAAE;QAACE,KAAK,EAAE;UAACd,aAAa,EAAEA;QAAa;MAAC,CAAC,CAAC;IACvE,CAAC;IACD,oBACIH,OAAA,CAACJ,GAAG;MAACsB,OAAO,EAAEA,CAAA,KAAI;QAACF,cAAc,CAAC,CAAC;MAAA,CAAE;MAAAR,QAAA,eACjCR,OAAA;QAAeE,IAAI,EAAEA;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAEd,CAAC;EAAAT,EAAA,CAVMU,kBAAkB;IAAA,QACJnB,WAAW;EAAA;EAehC,IAAIQ,aAAa,EAAE;IAAE;IACjB,oBACIH,OAAA,CAACc,kBAAkB;MACfX,aAAa,EAAEA,aAAc;MAC7BD,IAAI,EAAEA;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAEV;EACA,oBAAOb,OAAA,CAACM,aAAa;IAACJ,IAAI,EAAEA;EAAK;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEvC,CAAC;AAAAM,EAAA,GA5CKlB,cAAc;AA8CpB,eAAeA,cAAc;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
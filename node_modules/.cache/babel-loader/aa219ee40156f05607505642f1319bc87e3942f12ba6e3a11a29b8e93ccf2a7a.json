{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{Box,Typography}from'@mui/material';import{withStyles}from'@mui/styles';import QuestionButton from'./QuestionButton';import questions from'../questions/questions';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QuestionWithStyles=withStyles({root:{color:\"#fabb5e\",backgroundColor:\"#141516\"}})(Typography);const Question=()=>{const[currentQuestion,setCurrentQuestion]=useState(questions[0]);const currentAnswers=currentQuestion.answers;const navigate=useNavigate();const handleAnswerClick=(nextQuestion,calculatedCar)=>{if(nextQuestion){return setCurrentQuestion(questions[nextQuestion]);}return navigate('/quiz-complete',{state:{carSuccess:calculatedCar}});};return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Box,{mb:5,children:/*#__PURE__*/_jsx(QuestionWithStyles,{fontSize:38,children:currentQuestion.questionText})}),currentAnswers===null||currentAnswers===void 0?void 0:currentAnswers.map((n,index)=>/*#__PURE__*/_jsx(QuestionButton,{text:currentAnswers[index].response,calculatedCar:currentAnswers[index].calculatedCar,onClick:()=>{var _currentAnswers$index,_currentAnswers$index2;return handleAnswerClick((_currentAnswers$index=currentAnswers[index])===null||_currentAnswers$index===void 0?void 0:_currentAnswers$index.nextQuestion,(_currentAnswers$index2=currentAnswers[index])===null||_currentAnswers$index2===void 0?void 0:_currentAnswers$index2.calculatedCar);}}))]});};export default Question;","map":{"version":3,"names":["React","useState","useNavigate","Box","Typography","withStyles","QuestionButton","questions","jsx","_jsx","jsxs","_jsxs","QuestionWithStyles","root","color","backgroundColor","Question","currentQuestion","setCurrentQuestion","currentAnswers","answers","navigate","handleAnswerClick","nextQuestion","calculatedCar","state","carSuccess","children","mb","fontSize","questionText","map","n","index","text","response","onClick","_currentAnswers$index","_currentAnswers$index2"],"sources":["D:/Code/Nodejs/car-selector/connorfoersterellis.github.io/src/components/Question.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Box, Typography } from '@mui/material'\r\n\r\nimport { withStyles } from '@mui/styles'\r\n\r\nimport QuestionButton from './QuestionButton'\r\nimport questions from '../questions/questions'\r\n\r\n\r\nconst QuestionWithStyles = withStyles({\r\n  root: {\r\n    color: \"#fabb5e\",\r\n    backgroundColor: \"#141516\",\r\n  }\r\n})(Typography)\r\n\r\nconst Question = () => {\r\n    const [currentQuestion, setCurrentQuestion] = useState(questions[0])\r\n    const currentAnswers = currentQuestion.answers\r\n    const navigate = useNavigate()\r\n\r\n    const handleAnswerClick = (nextQuestion, calculatedCar) => {\r\n        if (nextQuestion) {\r\n            return setCurrentQuestion(questions[nextQuestion])\r\n        }\r\n        return navigate('/quiz-complete', {state: {carSuccess: calculatedCar}})\r\n    }    \r\n\r\n    return (\r\n        <Box>\r\n            <Box mb={5}>\r\n                <QuestionWithStyles fontSize={38}>\r\n                    {currentQuestion.questionText}\r\n                </QuestionWithStyles>\r\n            </Box>               \r\n            {currentAnswers?.map((n, index) => (\r\n                <QuestionButton \r\n                    text={currentAnswers[index].response}\r\n                    calculatedCar={currentAnswers[index].calculatedCar}                                \r\n                    onClick={() => handleAnswerClick(currentAnswers[index]?.nextQuestion, currentAnswers[index]?.calculatedCar)}\r\n                />\r\n            ))}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Question"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,GAAG,CAAEC,UAAU,KAAQ,eAAe,CAE/C,OAASC,UAAU,KAAQ,aAAa,CAExC,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAC7C,MAAO,CAAAC,SAAS,KAAM,wBAAwB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAG9C,KAAM,CAAAC,kBAAkB,CAAGP,UAAU,CAAC,CACpCQ,IAAI,CAAE,CACJC,KAAK,CAAE,SAAS,CAChBC,eAAe,CAAE,SACnB,CACF,CAAC,CAAC,CAACX,UAAU,CAAC,CAEd,KAAM,CAAAY,QAAQ,CAAGA,CAAA,GAAM,CACnB,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGjB,QAAQ,CAACM,SAAS,CAAC,CAAC,CAAC,CAAC,CACpE,KAAM,CAAAY,cAAc,CAAGF,eAAe,CAACG,OAAO,CAC9C,KAAM,CAAAC,QAAQ,CAAGnB,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAoB,iBAAiB,CAAGA,CAACC,YAAY,CAAEC,aAAa,GAAK,CACvD,GAAID,YAAY,CAAE,CACd,MAAO,CAAAL,kBAAkB,CAACX,SAAS,CAACgB,YAAY,CAAC,CAAC,CACtD,CACA,MAAO,CAAAF,QAAQ,CAAC,gBAAgB,CAAE,CAACI,KAAK,CAAE,CAACC,UAAU,CAAEF,aAAa,CAAC,CAAC,CAAC,CAC3E,CAAC,CAED,mBACIb,KAAA,CAACR,GAAG,EAAAwB,QAAA,eACAlB,IAAA,CAACN,GAAG,EAACyB,EAAE,CAAE,CAAE,CAAAD,QAAA,cACPlB,IAAA,CAACG,kBAAkB,EAACiB,QAAQ,CAAE,EAAG,CAAAF,QAAA,CAC5BV,eAAe,CAACa,YAAY,CACb,CAAC,CACpB,CAAC,CACLX,cAAc,SAAdA,cAAc,iBAAdA,cAAc,CAAEY,GAAG,CAAC,CAACC,CAAC,CAAEC,KAAK,gBAC1BxB,IAAA,CAACH,cAAc,EACX4B,IAAI,CAAEf,cAAc,CAACc,KAAK,CAAC,CAACE,QAAS,CACrCX,aAAa,CAAEL,cAAc,CAACc,KAAK,CAAC,CAACT,aAAc,CACnDY,OAAO,CAAEA,CAAA,QAAAC,qBAAA,CAAAC,sBAAA,OAAM,CAAAhB,iBAAiB,EAAAe,qBAAA,CAAClB,cAAc,CAACc,KAAK,CAAC,UAAAI,qBAAA,iBAArBA,qBAAA,CAAuBd,YAAY,EAAAe,sBAAA,CAAEnB,cAAc,CAACc,KAAK,CAAC,UAAAK,sBAAA,iBAArBA,sBAAA,CAAuBd,aAAa,CAAC,EAAC,CAC/G,CACJ,CAAC,EACD,CAAC,CAEd,CAAC,CAED,cAAe,CAAAR,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
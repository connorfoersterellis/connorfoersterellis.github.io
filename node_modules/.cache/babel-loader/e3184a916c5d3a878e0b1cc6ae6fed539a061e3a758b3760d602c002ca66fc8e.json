{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Nodejs\\\\car-selector\\\\src\\\\components\\\\Question.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Typography, Paper } from '@mui/material';\nimport QuestionButton from './QuestionButton';\nimport questions from '../questions/questions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = () => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(questions[0]);\n  const currentAnswers = currentQuestion.answers;\n  const handleAnswerClick = nextQuestion => {\n    setCurrentQuestion(questions[nextQuestion]);\n  };\n  return (\n    /*#__PURE__*/\n    // Questions\n    _jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: currentQuestion.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        width: '100%',\n        display: \"inline-flex\",\n        children: currentAnswers === null || currentAnswers === void 0 ? void 0 : currentAnswers.map((test, index) => /*#__PURE__*/_jsxDEV(QuestionButton, {\n          text: currentAnswers[index].response,\n          onClick: () => handleAnswerClick(currentAnswers[index].nextQuestion),\n          calculatedCar: currentAnswers[index].calculatedCar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(Question, \"wIoYTk67w5hOwj0tha7EMps4oM0=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","Box","Typography","Paper","QuestionButton","questions","jsxDEV","_jsxDEV","Question","_s","currentQuestion","setCurrentQuestion","currentAnswers","answers","handleAnswerClick","nextQuestion","children","variant","questionText","fileName","_jsxFileName","lineNumber","columnNumber","width","display","map","test","index","text","response","onClick","calculatedCar","_c","$RefreshReg$"],"sources":["D:/Code/Nodejs/car-selector/src/components/Question.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Box, Typography, Paper } from '@mui/material'\r\n\r\nimport QuestionButton from './QuestionButton'\r\nimport questions from '../questions/questions'\r\n\r\n\r\nconst Question = () => {\r\n    const [currentQuestion, setCurrentQuestion] = useState(questions[0])\r\n    const currentAnswers = currentQuestion.answers\r\n\r\n    const handleAnswerClick = (nextQuestion) => {        \r\n        setCurrentQuestion(questions[nextQuestion])\r\n    }\r\n        \r\n\r\n    return (\r\n\r\n// Questions\r\n        <Box>\r\n            <Box>\r\n                <Paper>\r\n                    <Typography variant=\"h4\">{currentQuestion.questionText}</Typography>\r\n                </Paper>\r\n            </Box>\r\n\r\n\r\n{/* Answers */}\r\n            <Box \r\n                width={'100%'} \r\n                display='inline-flex'\r\n            >\r\n                \r\n                        {currentAnswers?.map((test, index) => (\r\n                            <QuestionButton \r\n                                text={currentAnswers[index].response}\r\n                                onClick={() => handleAnswerClick(currentAnswers[index].nextQuestion)}\r\n                                calculatedCar={currentAnswers[index].calculatedCar}                                \r\n                            />\r\n                        ))}\r\n            </Box>\r\n\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Question"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,UAAU,EAAEC,KAAK,QAAQ,eAAe;AAEtD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,SAAS,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG9C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAACK,SAAS,CAAC,CAAC,CAAC,CAAC;EACpE,MAAMO,cAAc,GAAGF,eAAe,CAACG,OAAO;EAE9C,MAAMC,iBAAiB,GAAIC,YAAY,IAAK;IACxCJ,kBAAkB,CAACN,SAAS,CAACU,YAAY,CAAC,CAAC;EAC/C,CAAC;EAGD;IAAA;IAEJ;IACQR,OAAA,CAACN,GAAG;MAAAe,QAAA,gBACAT,OAAA,CAACN,GAAG;QAAAe,QAAA,eACAT,OAAA,CAACJ,KAAK;UAAAa,QAAA,eACFT,OAAA,CAACL,UAAU;YAACe,OAAO,EAAC,IAAI;YAAAD,QAAA,EAAEN,eAAe,CAACQ;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eAINf,OAAA,CAACN,GAAG;QACAsB,KAAK,EAAE,MAAO;QACdC,OAAO,EAAC,aAAa;QAAAR,QAAA,EAGZJ,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC7BpB,OAAA,CAACH,cAAc;UACXwB,IAAI,EAAEhB,cAAc,CAACe,KAAK,CAAC,CAACE,QAAS;UACrCC,OAAO,EAAEA,CAAA,KAAMhB,iBAAiB,CAACF,cAAc,CAACe,KAAK,CAAC,CAACZ,YAAY,CAAE;UACrEgB,aAAa,EAAEnB,cAAc,CAACe,KAAK,CAAC,CAACI;QAAc;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGL;EAAC;AAEd,CAAC;AAAAb,EAAA,CAtCKD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAwCd,eAAeA,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}